{
  "openapi": "3.0.0",
  "info": {
    "description": "Narcis's BookAPI",
    "version": "1.0.0",
    "title": "Make A BookAPI with me",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "tags": [
    {
      "name": "Books API",
      "description": "API for managing books"
    }
  ],
  "servers": [
    {
      "url": "/"
    }
  ],
  "components": {
    "schemas": {
      "Book": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "author": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "BookUpdate": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      }
    }
  },
  "paths": {
    "/books": {
      "get": {
        "tags": [
          "Books API"
        ],
        "summary": "Get all books",
        "responses": {
          "200": {
            "description": "A list of books",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Books API"
        ],
        "summary": "Add a new book",
        "requestBody": {
          "description": "Book object that needs to be added to the library",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookUpdate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Book created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          }
        }
      }
    },
    "/book/{id}": {
      "get": {
        "tags": [
          "Books API"
        ],
        "summary": "Get a book by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the book to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Book retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": {
            "description": "Book not found"
          }
        }
      },
      "put": {
        "tags": [
          "Books API"
        ],
        "summary": "Update a book",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the book to update"
          }
        ],
        "requestBody": {
          "description": "Book object with updated information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": {
            "description": "Book not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Books API"
        ],
        "summary": "Delete a book",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the book to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Book deleted"
          },
          "404": {
            "description": "Book not found"
          }
        }
      }
    }
  }
}
